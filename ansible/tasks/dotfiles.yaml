- name: Check if dotfiles directory exists
  stat:
    path: "{{ ansible_env.HOME }}/.dotfiles"
  register: dotfiles_dir
  tags:
    - install
    - dotfiles
    - stow
    - cli

- name: Backup existing dotfiles if present
  command: mv "{{ ansible_env.HOME }}/.dotfiles" "{{ ansible_env.HOME }}/.dotfiles.backup.{{ ansible_date_time.epoch }}"
  when: dotfiles_dir.stat.exists
  tags:
    - install
    - dotfiles
    - stow
    - cli

- name: Install stow
  community.general.homebrew:
    name: ["stow"]
  tags:
    - install
    - dotfiles
    - stow
    - cli

- name: Cloning .dotfiles
  ansible.builtin.git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ lookup('env', 'HOME') }}/.dotfiles"
    recursive: yes
    update: yes
    accept_hostkey: yes
    force: yes
    version: main
  tags:
    - install
    - dotfiles
    - stow
    - cli

- name: Cloning tpm (tmux plug manager)
  ansible.builtin.git:
    repo: "https://github.com/tmux-plugins/tpm"
    dest: "{{ lookup('env', 'HOME') }}/.tmux/plugins/tpm"
    recursive: yes
    update: yes
    accept_hostkey: yes
    force: yes
    version: master
  tags:
    - install
    - dotfiles
    - stow
    - cli

- name: Stow dotfiles
  shell: cd $HOME/.dotfiles && ./install.sh
  changed_when: true
  tags:
    - install
    - dotfiles
    - stow
    - cli

- name: Check for presence of .tmux.conf
  stat:
    path: ~/.tmux.conf
  register: tmux_conf_exists
  tags:
    - install
    - dotfiles
    - stow
    - cli
